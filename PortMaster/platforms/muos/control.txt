#!/bin/bash
#
# SPDX-License-Identifier: MIT
#

# TODO: check this
CUR_TTY=/dev/tty0

. /opt/muos/script/var/func.sh

# Grab Device Name
DEVICE_NAME="$(GET_VAR "device" "board/name")"
ANALOG_STICKS=$(GET_VAR "device" "board/stick")

export controlfolder="/mnt/mmc/MUOS/PortMaster"

script_path=$(realpath "$0")

# Get the initial base directory.
directory=$(echo "$script_path" | awk -F'/' '{print $2 "/" $3}')

# Use a case statement to check if we are in the union path.
case "$directory" in
  "mnt/union")
    # Test for the sdcard path first
    if [ -f "$(echo "$script_path" | sed 's|/union/|/sdcard/|')" ]; then
      directory="mnt/sdcard"
    # Then test for the mmc path
    elif [ -f "$(echo "$script_path" | sed 's|/union/|/mmc/|')" ]; then
      directory="mnt/mmc"
    fi
    ;;
esac

export directory

export PATH="/opt/python/bin:$controlfolder/muos:$controlfolder/muos:$PATH"

export LD_LIBRARY_PATH="/opt/python/lib:$LD_LIBRARY_PATH"
export ESUDO=""
export ESUDOKILL="-1" # for 351Elec and EmuELEC use "-1" (numeric one) or "-k" 

if [ -d "/usr/lib32/" ]; then
  export SDL_GAMECONTROLLERCONFIG_FILE="/usr/lib32/gamecontrollerdb.txt"
else
  export SDL_GAMECONTROLLERCONFIG_FILE="/usr/lib/gamecontrollerdb.txt"
fi

SDLDBFILE="${SDL_GAMECONTROLLERCONFIG_FILE}"
[ -z "${SDLDBFILE}" ] && SDLDBFILE="${controlfolder}/gamecontrollerdb.txt"
SDLDBUSERFILE="${HOME}/.config/SDL-GameControllerDB/gamecontrollerdb.txt"
[ ! -f "${SDLDBUSERFILE}" ] && SDLDBUSERFILE="$SDL_GAMECONTROLLERCONFIG_FILE"

case "$DEVICE_NAME" in
  tui-brick)
    SDL_CTRL_NAME="TRIMUI Brick Controller"
    ;;
  tui-spoon)
    SDL_CTRL_NAME="TRIMUI Smart Pro Controller"
    ;;
  *)
    SDL_CTRL_NAME="Deeplay-keys"
    ;;
esac

export SDL_GAMECONTROLLERCONFIG=$(grep "$SDL_CTRL_NAME" "$SDL_GAMECONTROLLERCONFIG_FILE")

get_controls() {
  # Clear the framebuffer :D
  # Do it twice, it's just as nice!
  cat /dev/zero > /dev/fb0 2>/dev/null
  cat /dev/zero > /dev/fb0 2>/dev/null

  grep "${SDLDBUSERFILE}" -e "$SDL_CTRL_NAME" > /tmp/gamecontrollerdb.txt

  LOWRES="N"

  ANALOGSTICKS=$ANALOG_STICKS

  sdl_controllerconfig="$(< "/tmp/gamecontrollerdb.txt")"
}

source $controlfolder/device_info.txt
source $controlfolder/funcs.txt

# HACKY MC HACK FACE, 2.0
if [ "$DEVICE_HAS_AARCH64" == "N" ]; then
  # CRUSH KILL DESTROY
  if [ -f "$controlfolder/archs/armhf/gptokeyb.armhf" ]; then
    mv "$controlfolder/archs/armhf/gptokeyb.armhf" "$controlfolder/archs/armhf/gptokeyb"
  fi

  if [ -f "$controlfolder/archs/armhf/gptokeyb2.armhf" ]; then
    mv "$controlfolder/archs/armhf/gptokeyb2.armhf" "$controlfolder/archs/armhf/gptokeyb2"
  fi

  if [ -f "$controlfolder/archs/armhf/xdelta3.armhf" ]; then
    mv "$controlfolder/archs/armhf/xdelta3.armhf" "$controlfolder/archs/armhf/xdelta3"
  fi
else
  if [ -f "$controlfolder/platforms/muos/mount" ]; then
    rm -f "$controlfolder/platforms/muos/mount"
  fi
fi

export GPTOKEYB2="$ESUDO env LD_PRELOAD=$controlfolder/archs/${DEVICE_ARCH}/libinterpose.${DEVICE_ARCH}.so $controlfolder/archs/${DEVICE_ARCH}/gptokeyb2 $ESUDOKILL"
export GPTOKEYB="$ESUDO $controlfolder/archs/${DEVICE_ARCH}/gptokeyb $ESUDOKILL"
